/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Persistencia.TaskJpaController;
import dominio.Task;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xfs85
 */
public class ToDoFrm extends javax.swing.JFrame {

    /**
     * Creates new form ToDoFrm
     */
    DefaultTableModel tableModelTasks = new DefaultTableModel();
    TaskJpaController taskJpa = new TaskJpaController();

    public ToDoFrm() {
        initComponents();
        tableModelTasks.addColumn("Nombre");
        tableModelTasks.addColumn("Fecha limite");
        toDoTable.setModel(tableModelTasks);
        cargarTasks();
        toDoTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                if (!e.getValueIsAdjusting() && toDoTable.getSelectedRow() != -1) {
                    // Activar el bot√≥n cuando hay una fila seleccionada
                    lblEditBtn.setVisible(false);
                    lblCompleteBtn.setVisible(false);
                    editBtn.setEnabled(true);
                    deleteBtn.setEnabled(true);

                }

            }
        });

//        editBtn.addActionListener(new ActionListener() {
//
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                int selectedRow = toDoTable.getSelectedRow();
//
//                if (selectedRow != -1) {
//
//                    Object data = toDoTable.getValueAt(selectedRow, 0);
//
//                    EditTaskFrm taskEdited = new EditTaskFrm();
//
//                    taskEdited.setVisible(true);
//                } else {
//                    JOptionPane.showMessageDialog(null, "Seleccione una tarea para editar");
//                }
//            }
//
//        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        toDoTable = new javax.swing.JTable();
        lblEditBtn = new javax.swing.JLabel();
        lblCompleteBtn = new javax.swing.JLabel();
        Main = new javax.swing.JLabel();
        editBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        toDoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Fecha limite"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        toDoTable.setColumnSelectionAllowed(true);
        toDoTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        toDoTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(toDoTable);
        toDoTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (toDoTable.getColumnModel().getColumnCount() > 0) {
            toDoTable.getColumnModel().getColumn(0).setResizable(false);
            toDoTable.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 430, 350));

        lblEditBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/disabledEditBtn.png"))); // NOI18N
        jPanel1.add(lblEditBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 244, 160, -1));

        lblCompleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/disabledCompleteBtn.png"))); // NOI18N
        jPanel1.add(lblCompleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 313, -1, -1));

        Main.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main 2.jpg"))); // NOI18N
        jPanel1.add(Main, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 720, 480));

        editBtn.setBorderPainted(false);
        editBtn.setContentAreaFilled(false);
        editBtn.setEnabled(false);
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        jPanel1.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 243, 160, 40));

        deleteBtn.setBorderPainted(false);
        deleteBtn.setContentAreaFilled(false);
        deleteBtn.setEnabled(false);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 313, 160, 40));

        addBtn.setBorderPainted(false);
        addBtn.setContentAreaFilled(false);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        jPanel1.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 173, 170, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cargarTasks() {
        List<Task> tasks = taskJpa.findTaskEntities();
        tableModelTasks.setRowCount(0);

        for (Task task : tasks) {
            Object[] row = {
                task.getName(),
                task.getFinalDate()
            };

            tableModelTasks.addRow(row);

        }
    }

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed

        if (toDoTable.getSelectedRow() != -1) {
            toDoTable.clearSelection();
        }

        new AddTaskFrm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addBtnActionPerformed


    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed

      int selectedRow = toDoTable.getSelectedRow();

                if (selectedRow != -1) {
                    Task taskToEdit= new Task();
                    taskToEdit.setName(String.valueOf(toDoTable.getValueAt(selectedRow, 0)));
                   
                  
                    taskToEdit.setFinalDate((LocalDateTime) toDoTable.getValueAt(selectedRow, 1));
                    
                    EditTaskFrm taskEdited = new EditTaskFrm(taskToEdit);

                    taskEdited.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Seleccione una tarea para editar");
                }
                
                this.dispose();
    }//GEN-LAST:event_editBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Main;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCompleteBtn;
    private javax.swing.JLabel lblEditBtn;
    private javax.swing.JTable toDoTable;
    // End of variables declaration//GEN-END:variables
}
